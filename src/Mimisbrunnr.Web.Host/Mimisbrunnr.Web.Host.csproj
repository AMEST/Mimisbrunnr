<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <UserSecretsId>1ed1e703-6c9e-4dac-a40e-713c87107a31</UserSecretsId>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <Authors>Klabukov Erik</Authors>
        <Product>Mimisbrunnr</Product>
        <Description>Mimisbrunnr - confluence like wiki system</Description>
        <Copyright>Klabukov Erik</Copyright>
        <Version>0-develop</Version>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
    </PropertyGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>
    
    <ItemGroup>
        <Folder Include="wwwroot\" />
    </ItemGroup>

    <ItemGroup>
    <Content Include="dev.pfx">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.6" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="8.0.6" />
        <PackageReference Include="prometheus-net.AspNetCore" Version="6.0.0" />
        <PackageReference Include="prometheus-net.DotNetRuntime" Version="4.2.4" />
        <PackageReference Include="Skidbladnir.Caching.Distributed.MongoDB" Version="1.7.0" />
        <PackageReference Include="Skidbladnir.DataProtection.MongoDb" Version="1.7.0" />
        <PackageReference Include="Skidbladnir.Modules" Version="1.7.0" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
        <PackageReference Include="VueCliMiddleware" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="3.1.21" />
        <PackageReference Include="StackExchange.Redis" Version="2.2.4" />
        <PackageReference Include="Scrutor" Version="3.3.0" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Mimisbrunnr.Storage.MongoDb\Mimisbrunnr.Storage.MongoDb.csproj" />
        <ProjectReference Include="..\Mimisbrunnr.Web\Mimisbrunnr.Web.csproj" />
        <ProjectReference Include="..\Mimisbrunnr.Persistent\Mimisbrunnr.Persistent.csproj" />
        <ProjectReference Include="..\DataImport\Mimisbrunnr.DataImport.Confluence\Mimisbrunnr.DataImport.Confluence.csproj" />
    </ItemGroup>
    
    <!-- Vue Integration -->
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build">
        <!-- Build Target:  Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Exec Command="npm --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js and npm are required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    </Target>
    <Target Name="EnsureNodeModulesInstalled" BeforeTargets="Build" Inputs="package.json" Outputs="packages-lock.json" Condition="!Exists('$(SpaRoot)node_modules')">
        <!-- Build Target: Restore NPM packages using npm -->
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>
    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- Build Target: Run webpack dist build -->
        <Message Importance="high" Text="Running npm build..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>True</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
